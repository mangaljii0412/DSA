class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root == NULL) return 0;
        queue<pair<TreeNode* , int>> q;
        q.push({root , 0});
        int width = 0;
        while(!q.empty())
        {
            int size = q.size();
            int nmin = q.front().second;
            int first , last;
            for(int i = 0 ; i  < size;i++)
            {
                int index = q.front().second-nmin;
                TreeNode* node = q.front().first;
                q.pop();
                if(i==0) first = index;
                if(i==size-1) last = index;
                if(node->left) q.push({node->left , (long)index*2+1});
                if(node->right) q.push({node->right , (long)index*2+2});
            }
            width = max(width , last-first+1);
        }
        return width;
    }
};
