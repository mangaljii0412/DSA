class Solution {
public:
    int candy(vector<int>& ratings) {
    //     int size = ratings.size();
    //     int candy = size;
    //     int i = 1;
    //     while(i < size){
    //       if(ratings[i] == ratings[i-1]){
    //         i++;
    //         continue;
    //       }
    //       int left = 0;
    //       while(ratings[i] > ratings[i-1]){
    //         left++;
    //         candy+=left;
    //         i++;
    //         if(i == size) return candy;
    //       }
    //       int right = 0;
    //       while(i < size && ratings[i] < ratings[i-1]){
    //         right++;
    //         candy += right;
    //         i++;
    //       }
    //       candy -= min(left,right);
    //     }
    //     return candy;

        int size = ratings.size();
        vector<int> v(size , 1);
        for(int i = 1 ; i < size;i++){
          if(ratings[i] > ratings[i-1]) v[i] = v[i-1] + 1;
        }
        for(int i = size-2 ; i >= 0 ;i--){
          if(ratings[i] > ratings[i+1]) v[i] = max(v[i], v[i+1] + 1);
        }
        int candy = accumulate(v.begin() , v.end() , 0);
        return candy;
    }
};
