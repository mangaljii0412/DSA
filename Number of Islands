class Solution {
public:

void dfs(int i , int j, int trow , int tcol ,vector<vector<char>>& grid ){
    if(i >= 0 && i < trow && j >= 0 && j < tcol && grid[i][j]=='1'){
    grid[i][j]=0;
    dfs(i-1,j,trow,tcol,grid);
    dfs(i+1,j,trow,tcol,grid);
    dfs(i,j-1,trow,tcol,grid);
    dfs(i,j+1,trow,tcol,grid);
    }
    else{
    return ;
    }

}
    int numIslands(vector<vector<char>>& grid) {
        if(grid.size() == 0) return 0;
        int m = grid.size();
        int count = 0;
        int n = grid[0].size();
        for(int i = 0 ; i < m ;i++){
            for(int j = 0 ; j < n ;j++){
                if(grid[i][j] == '1'){
                    count++;
                    dfs(i,j,m,n,grid);
                }
            }
        }
        return count;
    }
};
